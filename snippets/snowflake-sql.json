{
	"type": {
		"prefix": "type",
		"body": [
			"${1|NUMBER(38\\, 0),VARCHAR(16777216),BOOLEAN,DATE,DATETIME,TIME|}"
		]
	},
	// shortcut
	"SELECT": {
		"prefix": ["SELECT", "sel.", "sl."],
		"body": [
			"SELECT "
		]
	},
	"FROM": {
		"prefix": ["FROM", "from.", "fm."],
		"body": [
			"FROM "
		]
	},
	"WHERE": {
		"prefix": ["WHERE", "whe.", "wh."],
		"body": [
			"WHERE "
		]
	},
	"OR": {
		"prefix": ["OR", "or."],
		"body": [
			"OR "
		]
	},
	"AND": {
		"prefix": ["AND", "and.", "an."],
		"body": [
			"AND "
		]
	},
	"ORDER BY": {
		"prefix": ["ORDER BY", "ord.", "od."],
		"body": [
			"ORDER BY "
		]
	},
	"GROUP BY": {
		"prefix": ["GROUP BY", "gp."],
		"body": [
			"GROUP BY ALL"
		]
	},
	"LIMIT": {
		"prefix": ["LIMIT", "lim."],
		"body": [
			"LIMIT 10"
		]
	},
	"COUNT": {
		"prefix": ["COUNT", "cnt."],
		"body": [
			"COUNT($0)"
		]
	},
	"MAX": {
		"prefix": ["MAX", "max."],
		"body": [
			"MAX($0)"
		]
	},
	"MIN": {
		"prefix": ["MIN", "min."],
		"body": [
			"MIN($0)"
		]
	},
	"SUM": {
		"prefix": ["SUM", "sum."],
		"body": [
			"SUM($0)"
		]
	},
	"MEDIAN": {
		"prefix": ["MEDIAN", "med."],
		"body": [
			"MEDIAN($0)"
		]
	},
	"MODE": {
		"prefix": ["MODE", "mod."],
		"body": [
			"MODE($0)"
		]
	},
	"AVERAGE": {
		"prefix": ["AVG", "ave."],
		"body": [
			"AVG($0)"
		]
	},
	"GREATEST": {
		"prefix": ["GREATEST", "great.", "gre."],
		"body": [
			"GREATEST($0, 0)"
		]
	},
	"DIV0NULL": {
		"prefix": ["DIV0NULL", "div."],
		"body": [
			"DIV0NULL($0)"
		]
	},
	"COALESCE": {
		"prefix": ["COALESCE", "coal.", "coa."],
		"body": [
			"COALESCE($0, 0)"
		]
	},
	"WITH": {
		"prefix": ["WITH", "wi"],
		"body": [
			"WITH",
			"${1:tmp} AS ("
		]
	},
	"CASE": {
		"prefix": ["CASE", "ca"],
		"body": [
			"CASE",
			"\tWHEN ${1:<cond>} THEN ${2:<value>}",
			"\tELSE ${3:<value>}",
			"END"
		]
	},
	"INNER JOIN": {
		"prefix": ["INNER JOIN", "ij"],
		"body": [
			"INNER JOIN",
			"\t$0",
			"ON"
		]
	},
	"LEFT JOIN": {
		"prefix": ["LEFT JOIN", "lj"],
		"body": [
			"LEFT JOIN",
			"\t$0",
			"ON"
		]
	},
	"OUTER JOIN": {
		"prefix": ["OUTER JOIN", "oj"],
		"body": [
			"FULL OUTER JOIN",
			"\t$0",
			"ON"
		]
	},
	// value
	"first_date": {
		"prefix": "first_date",
		"body": [
			"DATE_TRUNC('month', ${1:<DATE>})"
		]
	},
	"last_date": {
		"prefix": "last_date",
		"body": [
			"LAST_DAY(${1:<DATE>})"
		]
	},
	"today": {
		"prefix": "today",
		"body": [
			"CURRENT_DATE()"
		]
	},
	"yesterday": {
		"prefix": "yesterday",
		"body": [
			"DATEADD('day', -1, CURRENT_DATE())"
		]
	},
	"tomorrow": {
		"prefix": "tomorrow",
		"body": [
			"DATEADD('day', 1, CURRENT_DATE())"
		]
	},
	"yearmonth": {
		"prefix": "yearmonth",
		"body": [
			"TO_VARCHAR(${1:<DATE>}, 'YYYYMM')"
		]
	},
	// template
	"LEFT JOIN(not null)": {
		"prefix": "LEFT JOIN(not null)",
		"body": [
			"LEFT JOIN",
			"\t${2:<RIGHT>}",
			"ON",
			"\t${1:<LEFT>}.${3:<KEY>} = ${2:<RIGHT>}.${3:<KEY>}",
			"WHERE",
			"\t${2:<RIGHT>}.${3:<KEY>} IS NOT NULL"
		]
	},
	"pivot": {
		"prefix": "pivot",
		"body": [
			"PIVOT (",
			"\t${1:SUM(<VALUE>)}",
			"\tFOR",
			"\t\t${2:<KEY>}",
			"\tIN",
			"\t\t(SELECT DISTINCT ${2:<KEY>} FROM ${3:<TABLE>})",
			")"
		]
	},
	"insert": {
		"prefix": "insert",
		"body": [
			"INSERT INTO ${1:<TABLE>}",
			"\t(${2:<KEYS>})",
			"VALUES",
			"\t(${3:<VALUES>})",
			";"
		]
	},
	"update": {
		"prefix": "update",
		"body": [
			"UPDATE ${1:<TABLE>}",
			"SET",
			"\t${2:<KEY>} = ${3:<VALUE>}",
			";"
		]
	},
	"upsert": {
		"prefix": "upsert",
		"body": [
			"MERGE INTO ${1:<TARGET>} AS TARGET",
			"\tUSING ${2:<SOURCE>} AS SOURCE",
			"\tON TARGET.ID = SOURCE.ID",
			"\tWHEN MATCHED THEN",
			"\t\tUPDATE SET",
			"\t\t\tTARGET.VALUE=SOURCE.VALUE",
			"\tWHEN NOT MATCHED THEN",
			"\t\tINSERT (ID, VALUE) VALUES (",
			"\t\t\tSOURCE.ID, SOURCE.VALUE",
			"\t\t);"
		]
	},
	"random(uniform)": {
		"prefix": "uniform",
		"body": [
			"UNIFORM(${1:<min>}, ${2:<max>}, RANDOM())"
		]
	},
	"sequence": {
		"prefix": "seq",
		"body": [
			"SELECT",
			"\tROW_NUMBER() OVER (ORDER BY SEQ4())",
			"FROM",
			"\tTABLE(GENERATOR(ROWCOUNT=>${1:10}))"
		]
	},
	"generator": {
		"prefix": "generator",
		"body": [
			"TABLE(GENERATOR(ROWCOUNT=>${1:10}))"
		]
	},
	"hash": {
		"prefix": "hash",
		"body": [
			"HASH_AGG(*)"
		]
	},
	"create_table": {
		"prefix": "create",
		"body": [
			"CREATE TABLE ${1:<TABLE>} (",
			"\tID NUMBER NOT NULL PRIMARY KEY AUTOINCREMENT",
			"\t, ${2:<KEY>} ${3|NUMBER(38\\, 0),VARCHAR(16777216),BOOLEAN,DATE,DATETIME,TIME|} ${4|NOT NULL,PRIMARY KEY,AUTOINCREMENT,DEFAULT VALUE|}",
			");"
		]
	},
	"add_column": {
		"prefix": "add_column",
		"body": [
			"ALTER TABLE ${1:<TABLE>} ADD COLUMN ${2:<KEY>} ${3:<TYPE>};"
		]
	},
	"alter_column(not null)": {
		"prefix": "alter_col(not null)",
		"body": [
			"ALTER TABLE ${1:<TABLE>} MODIFY COLUMN ${2:<KEY>} SET NOT NULL;"
		]
	},
	"alter_column(unique)": {
		"prefix": "alter_col(unique)",
		"body": [
			"ALTER TABLE ${1:<TABLE>} ADD CONSTRAINT ${1:<CONSTRAINT_NAME>} UNIQUE (${2:<KEY>});"
		]
	},
	"alter_column(primary_key)": {
		"prefix": "alter_col(primary_key)",
		"body": [
			"ALTER TABLE ${1:<TABLE>} ADD CONSTRAINT ${1:<CONSTRAINT_NAME>} PRIMARY KEY (${2:<KEY>});"
		]
	},
	"extract_by_group": {
		"prefix": ["extract_by_group", "qualify"],
		"body": [
			"QUALIFY",
			"\tROW_NUMBER() OVER (PARTITION BY ${1:<KEY>} ORDER BY ${2:<INDEX>} DESC) = 1"
		]
	},
	"comment(table)": {
		"prefix": "comment(table)",
		"body": [
			"COMMENT ON TABLE ${1:<TABLE>} IS ${2:<COMMENT>};"
		]
	},
	"comment(column)": {
		"prefix": "comment(column)",
		"body": [
			"ALTER TABLE ${1:<TABLE>} ALTER (",
			"\t${2:<KEY>} COMMENT ${3:<COMMENT>}",
			");"
		]
	},
	// external table
	"create_external_stage": {
		"prefix": "create_external_stage",
		"body": [
			"CREATE STAGE ${1:<STAGE_NAME>}",
			"\tURL = '${2:<URL>}'",
			"\tSTORAGE_INTEGRATION = ${3:<INTEGRATION_NAME>};"
		]
	},
	"create_external_stage(s3)": {
		"prefix": "create_external_stage(s3)",
		"body": [
			"CREATE STAGE ${1:<STAGE_NAME>}",
			"\tURL = 'S3://${2:<BUCKET>}/${3:<PREFIX>}'",
			"\tSTORAGE_INTEGRATION = ${4:<INTEGRATION_NAME>};"
		]
	},
	"create_external_table": {
		"prefix": "create_external_table",
		"body": [
			"CREATE OR REPLACE EXTERNAL TABLE ${1:<TABLE>} (",
			"\tDATE_PART DATE AS (TO_DATE(METADATA\\$FILENAME)) NOT NULL",
			"\t, FILENAME VARCHAR AS (METADATA\\$FILENAME) NOT NULL",
			"\t, ${2:<KEY>} VARCHAR AS (VALUE:c1::VARCHAR) NULL",
			"\t, CONSTRAINT PK_${3:<TABLE>} PRIMARY KEY (DATE_PART, ${4:<KEY>})",
			")",
			"PARTITION BY (DATE_PART)",
			"LOCATION=@${5:<EXTERNAL_STAGE>}",
			"AUTO_REFRESH=FALSE",
			"FILE_FORMAT=(TYPE=CSV FIELD_DELIMITER=',' SKIP_HEADER=1 COMPRESSION=GZIP)",
			"PATTERN = '.*.czv.gz'",
			";"
		]
	},
	"parse_date_from_filename": {
		"prefix": "parse_date_from_filename",
		"body": [
			"TO_DATE(SUBSTRING(SPLIT_PART(METADATA\\$FILENAME, '_', -1), 1, 8), 'YYYYMMDD')"
		]
	},
	"get_value_from_external_table": {
		"prefix": "get_value_from_external_table",
		"body": [
			"CAST(GET(VALUE, '${1:c1}') AS VARCHAR(16777216)) NOT NULL"
		]
	},
	// template
	"colnames": {
		"prefix": "get_colnames",
		"body": [
			"SELECT",
			"\t*",
			"FROM",
			"\t${1:<DB_NAME>}.INFORMATION_SCHEMA.COLUMNS",
			"WHERE",
			"\tTABLE_CATALOG = '${1:<DB_NAME>}'",
			"AND",
			"\tTABLE_SCHEMA = '${2:<SCHEMA_NAME>}'",
			"AND",
			"\tTABLE_NAME = '${3:<TABLE_NAME>}'",
			";"
		]
	},
	"object_dependencies": {
		"prefix": "object_dependencies",
		"body": [
			"SELECT",
			"\tREFERENCED_DATABASE,",
			"\tREFERENCED_SCHEMA,",
			"\tREFERENCED_OBJECT_NAME,",
			"\tREFERENCED_OBJECT_DOMAIN,",
			"\tREFERENCING_DATABASE,",
			"\tREFERENCING_SCHEMA,",
			"\tREFERENCING_OBJECT_NAME,",
			"\tREFERENCING_OBJECT_DOMAIN",
			"FROM",
			"\tSNOWFLAKE.ACCOUNT_USAGE.OBJECT_DEPENDENCIES",
			"WHERE",
			"\tREFERENCING_DATABASE = '${1:<DB_NAME>}'",
			"AND",
			"\tREFERENCING_SCHEMA = '${2:<SCHEMA_NAME>}'",
			"AND",
			"\tREFERENCING_OBJECT_NAME = '${3:<TABLE_NAME>}'",
			";"
		]
	},
	"tables_are_equal": {
		"prefix": "tables_are_equal",
		"body": [
			"WITH",
			"ref AS (",
			"\tSELECT",
			"\t\tHASH_AGG(*)",
			"\tFROM",
			"\t\t<ref_table>",
			"),",
			"tgt AS (",
			"\tSELECT",
			"\t\tHASH_AGG(*)",
			"\tFROM",
			"\t\t<tgt_table>",
			"),",
			"diff AS (",
			"\tSELECT * FROM ref",
			"\tEXCEPT",
			"\tSELECT * FROM tgt",
			")",
			"SELECT * FROM diff;"
		]
	},

	// debug
	"show users": {
		"prefix": ["show_users", "su", "showu"],
		"body": [
			"SHOW USERS;"
		]
	},
	"show roles": {
		"prefix": ["show_roles", "sr", "showr"],
		"body": [
			"SHOW ROLES;"
		]
	},
	"show grants on": {
		"prefix": ["show_grants_on", "sgo", "showgo"],
		"description": "Objectに対して誰が何の権限を有するかを表示する",
		"body": [
			"SHOW GRANTS ON ${1|SCHEMA,TABLE,ROLE|} ${2:<OBJECT>};"
		]
	},
	"show grants to": {
		"prefix": ["show_grants_to", "sgt", "showgt"],
		"description": "ROLE/USERがどこに何の権限を有するかを表示する",
		"body": [
			"SHOW GRANTS TO ${1|ROLE,USER|} ${2:<NAME>};"
		]
	},
	"show columns": {
		"prefix": ["show_columns", "sc", "showc"],
		"body": [
			"SHOW COLUMNS IN ${1:<TABLE>};"
		]
	},
	"describe_table": {
		"prefix": ["describe_table", "dt", "desct"],
		"body": [
			"DESCRIBE TABLE ${1:<TABLE>};"
		]
	},
	"describe_view": {
		"prefix": ["describe_view", "dv", "descv"],
		"body": [
			"DESCRIBE VIEW ${1:<VIEW>};"
		]
	},
	"describe_user": {
		"prefix": ["describe_user", "du", "descu"],
		"body": [
			"DESCRIBE USER ${1:<USER>};"
		]
	},
	"describe_role": {
		"prefix": ["describe_role", "dr", "descr"],
		"body": [
			"DESCRIBE ROLE ${1:<ROLE>};"
		]
	},
	"duplicated": {
		"prefix": ["count_unique", "unique", "duplicated"],
		"body": [
			"SELECT ${2:<VALUE>}, COUNT(*) FROM ${1:<TABLE>} GROUP BY ALL ORDER BY COUNT(*) DESC;"
		]
	},
	"get_ddl": {
		"prefix": ["get_ddl", "ddl"],
		"body": [
			"SELECT GET_DDL('table', '${1:<TABLE>}');"
		]
	},
	// system
	"query_history": {
		"prefix": "query_history",
		"body": [
			"SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY ORDER BY START_TIME;"
		]
	},
	"query_history(aggregate)": {
		"prefix": "query_history(aggregate)",
		"body": [
			"SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.AGGREGATE_QUERY_HISTORY ORDER BY INTERVAL_START_TIME DESC;"
		]
	},
	"last_query_id": {
		"prefix": "last_query_id",
		"body": [
			"SELECT LAST_QUERY_ID();"
		]
	},
	"current_session": {
		"prefix": "current_session",
		"body": [
			"SELECT CURRENT_SESSION();"
		]
	},
	"cancel_last_query": {
		"prefix": "cancel_last_query",
		"body": [
			"SELECT SYSTEM\\$CANCEL_QUERY(LAST_QUERY_ID());"
		]
	},
	"cancel_current_queries": {
		"prefix": "cancel_current_queries",
		"body": [
			"SELECT SYSTEM\\$CANCEL_ALL_QUERIES(CURRENT_SESSION());"
		]
	},
	"cancel_query": {
		"prefix": "cancel_query",
		"body": [
			"SELECT SYSTEM\\$CANCEL_QUERY(${1:<QUERY_ID>});"
		]
	},
	"cancel_all_queries": {
		"prefix": "cancel_all_queries",
		"body": [
			"SELECT SYSTEM\\$CANCEL_ALL_QUERIES(${1:<SESSION_ID>});"
		]
	},
	// dbt
	"config": {
		"prefix": "config",
		"body": [
			"{{ config(",
			"\tmaterialized='${1|incremental,table,view|}',",
			"\tincremental_strategy='${2|merge,delete+insert,append|}',",
			"\tunique_key='${3:<KEY>}'",
			") }}"
		]
	},
	"is_incremental": {
		"prefix": "is_incremental",
		"body": [
			"{% if is_incremental() %}",
			"$0",
			"{% endif %}"
		]
	},
	"macro_query": {
		"prefix": "macro_query",
		"body": [
			"{% set query %}",
			"\t$0",
			"{% endset %}",
			"{% set result = run_query(query) %}",
			"{{ result.print_json() }}"
		]
	}
}
