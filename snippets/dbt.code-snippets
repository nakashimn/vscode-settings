{
	// commands
	"dbt build": {
		"scope": ["markdown", "snowflake-sql", "yaml"],
		"prefix": ["dbt_build", "dbtb"],
		"body": [
			"dbt build ${1|--select ,--full-refresh ,--target |}"
		]
	},
	"dbt external_sources": {
		"scope": ["markdown", "snowflake-sql", "yaml"],
		"prefix": ["dbt_ext", "dbtex"],
		"body": [
			"dbt run-operation stage_external_sources --vars \"ext_full_refresh: true\" --args \"select: $0\""
		]
	},
	"dbt osmosis": {
		"scope": ["markdown", "snowflake-sql", "yaml"],
		"prefix": ["dbt_osmosis", "dbtos"],
		"body": [
			"dbt-osmosis yaml refactor --fqn $0 --force-inherit-descriptions --skip-add-tags"
		]
	},
	// dbt yaml
	"test not_null": {
		"scope": ["yaml"],
		"prefix": ["test_notnull", "notnull"],
		"body": [
			"tests:",
			"- not_null"
		]
	},
	"test unique": {
		"scope": ["yaml"],
		"prefix": ["test_unique", "unique"],
		"body": [
			"tests:",
			"- unique"
		]
	},
	"test unique(multi)": {
		"scope": ["yaml"],
		"prefix": ["test_unique_combi", "unique_combi"],
		"body": [
			"tests:",
			"- dbt_utils.unique_combination_of_columns:",
			"\tcombination_of_columns:",
			"\t- ${1:col1}",
			"\t- ${2:col2}",
		]
	},
	// templates
	"config": {
		"prefix": "config",
		"body": [
			"{{ config(",
			"\tmaterialized='${1|incremental,table,view|}',",
			"\tincremental_strategy='${2|merge,delete+insert,append|}',",
			"\tunique_key='${3:<KEY>}'",
			") }}"
		]
	},
	"is_incremental": {
		"prefix": "is_incremental",
		"body": [
			"{% if is_incremental() %}",
			"$0",
			"{% endif %}"
		]
	},
	"macro_query": {
		"prefix": "macro_query",
		"body": [
			"{% set query %}",
			"\t$0",
			"{% endset %}",
			"{% set result = run_query(query) %}",
			"{{ result.print_json() }}"
		]
	}
}
